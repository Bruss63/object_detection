Timer unit: 1e-06 s

Total time: 11.5762 s
File: /var/folders/dl/6nyjf5ln29l4r50kpp36ngn40000gn/T/ipykernel_6362/4055618924.py
Function: video at line 2

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     2                                           def video():
     3         1          1.0      1.0      0.0      batch_size = 8
     4         1      95229.0  95229.0      0.8      video_dataset = VideoDataset('data/highway_video.mp4')
     5         2        288.0    144.0      0.0      video_dataloader = DataLoader(
     6         1          1.0      1.0      0.0          video_dataset, batch_size=batch_size, shuffle=False, collate_fn=lambda x: x)
     7                                               
     8                                               # cap = cv2.VideoCapture('data/highway_video.mp4')
     9         1          1.0      1.0      0.0      cap = video_dataset.cap
    10         1         23.0     23.0      0.0      num_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
    11                                           
    12                                               # Get video format
    13         1          2.0      2.0      0.0      fourcc = int(cap.get(cv2.CAP_PROP_FOURCC))
    14         1          2.0      2.0      0.0      fps = int(cap.get(cv2.CAP_PROP_FPS))
    15         1          2.0      2.0      0.0      w = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    16         1          1.0      1.0      0.0      h = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    17                                           
    18                                               # Create video writer
    19         1        228.0    228.0      0.0      vwriter = cv2.VideoWriter()
    20         2       2252.0   1126.0      0.0      vwriter.open(
    21         1         14.0     14.0      0.0          f'data/outputs/highway_video_out_{datetime.now().isoformat()}.mp4', fourcc, fps, (w, h), True)
    22                                           
    23                                           
    24         1          2.0      2.0      0.0      def signal_handler(sig, _):
    25                                                   print('SIGINT recieved')
    26                                                   global sig_int
    27                                                   sig_int = True
    28                                           
    29                                           
    30         1         30.0     30.0      0.0      signal.signal(signal.SIGINT, signal_handler)
    31                                           
    32                                               # Loop through video
    33                                               global sig_int
    34         1          1.0      1.0      0.0      sig_int = False
    35         2      25250.0  12625.0      0.2      with tqdm(total=num_frames+1) as pbar:
    36         3    5282631.0 1760877.0     45.6          for batch in video_dataloader:
    37                                                       ### without dataloader
    38                                                       # Get frame and pre process
    39                                                       # ret, frame = cap.read()
    40                                           
    41                                                       # if ret == False:
    42                                                       #     break
    43                                           
    44                                                       # out = frame.copy()
    45                                           
    46                                                       # Run the model, get detections and prep output frame
    47                                                       # %lprun -T eval_prof.txt -f eval_model result = eval_model(model, frame)
    48                                                       # result = eval_model(model, frames)
    49                                           
    50                                                       ### With dataloader
    51         3      31510.0  10503.3      0.3              origs, frames = zip(*batch)
    52         3         17.0      5.7      0.0              frames = list(frames)
    53                                           
    54         3    4143791.0 1381263.7     35.8              results = model(frames)
    55                                           
    56        27      41798.0   1548.1      0.4              for i, detections in enumerate(results):
    57        24      49888.0   2078.7      0.4                  out = draw_detections(origs[i], detections, 0.5)
    58        24     447508.0  18646.2      3.9                  vwriter.write(out)
    59                                           
    60         3          5.0      1.7      0.0              if sig_int:
    61         1         55.0     55.0      0.0                  break
    62                                           
    63         2       9500.0   4750.0      0.1              pbar.update(batch_size)
    64                                           
    65                                           
    66                                           
    67                                           
    68                                               # Release both input and output videos
    69         1       9787.0   9787.0      0.1      cap.release()
    70         1    1436425.0 1436425.0     12.4      vwriter.release()