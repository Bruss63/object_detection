Timer unit: 1e-06 s

Total time: 17.901 s
File: /var/folders/dl/6nyjf5ln29l4r50kpp36ngn40000gn/T/ipykernel_6362/966616718.py
Function: video at line 2

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     2                                           def video():
     3         1      82692.0  82692.0      0.5      cap = cv2.VideoCapture('data/highway_video.mp4')
     4         1         23.0     23.0      0.0      num_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
     5                                           
     6                                               # Get video format
     7         1          2.0      2.0      0.0      fourcc = int(cap.get(cv2.CAP_PROP_FOURCC))
     8         1          1.0      1.0      0.0      fps = int(cap.get(cv2.CAP_PROP_FPS))
     9         1        233.0    233.0      0.0      print(fps)
    10         1          3.0      3.0      0.0      w = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    11         1          3.0      3.0      0.0      h = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    12                                           
    13                                               # Create video writer
    14         1          3.0      3.0      0.0      vwriter = cv2.VideoWriter()
    15         2       1592.0    796.0      0.0      vwriter.open(
    16         1         13.0     13.0      0.0          f'data/outputs/highway_video_out_{datetime.now().isoformat()}.mp4', fourcc, fps, (w, h), True)
    17                                           
    18                                           
    19         1          3.0      3.0      0.0      def signal_handler(sig, _):
    20                                                   print('SIGINT recieved')
    21                                                   global sig_int
    22                                                   sig_int = True
    23                                           
    24                                           
    25         1         34.0     34.0      0.0      signal.signal(signal.SIGINT, signal_handler)
    26                                           
    27                                               # Loop through video
    28                                               global sig_int
    29         1          0.0      0.0      0.0      sig_int = False
    30         2      24869.0  12434.5      0.1      with tqdm(total=num_frames+1) as pbar:
    31        50         41.0      0.8      0.0          while(True):
    32                                                       # Get frame and pre process
    33        50     678540.0  13570.8      3.8              ret, frame = cap.read()
    34                                           
    35        50        143.0      2.9      0.0              if ret == False:
    36                                                           break
    37                                           
    38        50     129135.0   2582.7      0.7              out = frame.copy()
    39                                           
    40                                                       # Run the model, get detections and prep output frame
    41                                                       # %lprun -T eval_prof.txt -f eval_model result = eval_model(model, frame)
    42        50   14294849.0 285897.0     79.9              result = eval_model(model, frame)
    43                                           
    44        50      27967.0    559.3      0.2              detections = result[0]
    45        50      18888.0    377.8      0.1              out = draw_detections(out, detections, 0.5)
    46        50     689907.0  13798.1      3.9              vwriter.write(out)
    47                                           
    48        50        165.0      3.3      0.0              if sig_int:
    49         1          1.0      1.0      0.0                  break
    50                                           
    51        49      51494.0   1050.9      0.3              pbar.update(1)
    52                                           
    53                                           
    54                                               # Release both input and output videos
    55         1       5049.0   5049.0      0.0      cap.release()
    56         1    1895326.0 1895326.0     10.6      vwriter.release()