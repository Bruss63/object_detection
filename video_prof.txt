Timer unit: 1e-06 s

Total time: 29.6816 s
File: /var/folders/dl/6nyjf5ln29l4r50kpp36ngn40000gn/T/ipykernel_98376/1277613859.py
Function: video at line 2

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     2                                           def video():
     3         1       2248.0   2248.0      0.0      model.eval()
     4                                               # batch_size = 8
     5                                               # video_dataset = VideoDataset('data/highway_video.mp4')
     6                                           
     7                                               # video_dataloader = DataLoader(
     8                                               #     video_dataset, batch_size=batch_size, shuffle=False, collate_fn=lambda x: x)
     9                                               
    10         1      85253.0  85253.0      0.3      cap = cv2.VideoCapture('data/highway_video.mp4')
    11                                               # cap = video_dataset.cap
    12         1         16.0     16.0      0.0      num_frames = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
    13                                           
    14                                               # Get video format
    15         1          2.0      2.0      0.0      fourcc = int(cap.get(cv2.CAP_PROP_FOURCC))
    16         1          2.0      2.0      0.0      fps = int(cap.get(cv2.CAP_PROP_FPS))
    17         1          2.0      2.0      0.0      w = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    18         1          1.0      1.0      0.0      h = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    19                                           
    20                                               # Create video writer
    21         1          3.0      3.0      0.0      vwriter = cv2.VideoWriter()
    22         2       2701.0   1350.5      0.0      vwriter.open(
    23         1         11.0     11.0      0.0          f'data/outputs/highway_video_out_{datetime.now().isoformat()}.mp4', fourcc, fps, (w, h), True)
    24                                           
    25                                           
    26         1          4.0      4.0      0.0      def signal_handler(sig, _):
    27                                                   print('SIGINT recieved')
    28                                                   global sig_int
    29                                                   sig_int = True
    30                                           
    31                                           
    32         1         42.0     42.0      0.0      signal.signal(signal.SIGINT, signal_handler)
    33                                           
    34                                               # Loop through video
    35                                               global sig_int
    36         1          1.0      1.0      0.0      sig_int = False
    37         1          1.0      1.0      0.0      ret = True
    38         2      26043.0  13021.5      0.1      with tqdm(total=num_frames+1) as pbar:
    39        78         92.0      1.2      0.0          while(ret):
    40                                                       # Get frame and pre process
    41        78    1006927.0  12909.3      3.4              ret, frame = cap.read()
    42        78     274635.0   3521.0      0.9              img = frame.copy()
    43                                           
    44        78        155.0      2.0      0.0              if ret == False:
    45                                                           break
    46                                           
    47        78     205744.0   2637.7      0.7              img = np.array(img)
    48        78        409.0      5.2      0.0              img = img.transpose((2, 0, 1))
    49        78    2912784.0  37343.4      9.8              img = img / 255.0
    50        78    1161444.0  14890.3      3.9              img = torch.FloatTensor(img)
    51        78       1216.0     15.6      0.0              img = img.to(DEVICE)
    52                                           
    53        78   20414767.0 261727.8     68.8              results = model([img])
    54                                           
    55       156      19961.0    128.0      0.1              for i, detections in enumerate(results):
    56        78      58971.0    756.0      0.2                  out = draw_detections(frame, detections, 0.5)
    57        78    1151308.0  14760.4      3.9                  vwriter.write(out)
    58                                           
    59        78        138.0      1.8      0.0              if sig_int:
    60         1          1.0      1.0      0.0                  break
    61                                           
    62        77      85497.0   1110.4      0.3              pbar.update(1)
    63                                           
    64                                           
    65                                           
    66                                           
    67                                               # Release both input and output videos
    68         1       7893.0   7893.0      0.0      cap.release()
    69         1    2263312.0 2263312.0      7.6      vwriter.release()